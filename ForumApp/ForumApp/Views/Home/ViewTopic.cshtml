@model PagedList.IPagedList<DataAccessLayer.Models.Message>
@using PagedList.Mvc;
@using ForumApp.Properties

<h4>/ @Html.ActionLink("Forum", "Index", "Home") / @Html.ActionLink(Model.FirstOrDefault().TopicName, "ViewTopic", "Home", new { topicID = Model.FirstOrDefault().TopicID }, null)</h4>

<div>
    @Resources.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("ViewTopic", new { Model.FirstOrDefault().TopicID, page }))
</div>

@{
    var numMes = 1 + Model.PageSize * (Model.PageNumber - 1);
}

@foreach (DataAccessLayer.Models.Message mes in Model)
{
    <table class="table table-bordered">
        <colgroup>
            <col style="width: 20%;">
            <col style="width: 80%;">
        </colgroup>
        <thead>
            <tr>
                <th>#@numMes</th>
                <th>
                    <div class="col-md-4">
                        @Html.DisplayFor(model => mes.MessageDate)
                    </div>
                    @if (User.Identity.Name.Equals(mes.MessageAuthor) || User.IsInRole("Administrator"))
                    {
                        @Html.HiddenFor(model => mes.MessageID)
                        <div class="col-md-offset-10">
                            @Html.ActionLink(Resources.Edit, "EditMessage", "Home", new { messageID = mes.MessageID }, null)
                            @if (numMes > 1)
                            {
                                @Html.ActionLink(Resources.Delete, "DeleteMessage", "Home", new { messageID = mes.MessageID }, null)
                            }
                        </div>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th>
                    <pre style="white-space: pre;">
<b style="font-size: large;">@Html.ActionLink(mes.MessageAuthor, "Information", "Account", new { userName = mes.MessageAuthor }, null)</b>
@Resources.Role: 
    @Html.DisplayFor(model => mes.user.TypeUser)
@Resources.RegistrationDate: 
    @Html.DisplayFor(model => mes.user.RegistrationDate)
@Resources.CountMessages: 
    @Html.DisplayFor(model => mes.user.CountMessages)
                    </pre>
                </th>
                <td>@Html.DisplayFor(model => mes.TextMessage)</td>
            </tr>
        </tbody>
    </table>
    { numMes++; }
}

@if (User.Identity.IsAuthenticated)
{
    <div class="text-center">
        @using (Html.BeginForm("CreateMessage", "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.FirstOrDefault().TopicID)
            <h2>@Resources.InputMessage:</h2>
            <div>@Html.TextArea("text", null, 5, 40, new { @class = "textarea", placeholder = Resources.Message }) @Html.ValidationMessage("text")</div>
            <button type="submit" class="btn btn-primary">@Resources.AddMesasgeTitle</button>
        }
    </div>
}

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("ViewTopic", new { Model.FirstOrDefault().TopicID, page }))
</div>