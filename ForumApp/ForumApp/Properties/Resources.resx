<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountInformation" xml:space="preserve">
    <value>Account Information</value>
  </data>
  <data name="AddMesasgeTitle" xml:space="preserve">
    <value>Add mesasge</value>
  </data>
  <data name="AddMessage" xml:space="preserve">
    <value>Message added!</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="BackToForum" xml:space="preserve">
    <value>Back to Forum</value>
  </data>
  <data name="ChangeTypeUser" xml:space="preserve">
    <value>Type user changed!</value>
  </data>
  <data name="ChangeTypeUserBtn" xml:space="preserve">
    <value>Change Type User</value>
  </data>
  <data name="ChangeTypeUserError" xml:space="preserve">
    <value>Error change type user!</value>
  </data>
  <data name="ConfirmDelMes" xml:space="preserve">
    <value>Are you sure, that you want delete message?</value>
  </data>
  <data name="CountMessages" xml:space="preserve">
    <value>Count Messages</value>
  </data>
  <data name="CreateTopic" xml:space="preserve">
    <value>Topic created!</value>
  </data>
  <data name="CreateTopicTitle" xml:space="preserve">
    <value>Create Topic</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Message deleted!</value>
  </data>
  <data name="DeleteMessageError" xml:space="preserve">
    <value>Error delete message!</value>
  </data>
  <data name="DeleteMessageTitle" xml:space="preserve">
    <value>Delete Message</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditInBlock" xml:space="preserve">
    <value>[Edit]</value>
  </data>
  <data name="EditMessage" xml:space="preserve">
    <value>Message edited!</value>
  </data>
  <data name="EditMessageTitle" xml:space="preserve">
    <value>Edit Message</value>
  </data>
  <data name="EditTopic" xml:space="preserve">
    <value>Topic edited!</value>
  </data>
  <data name="EditTopicNameTitle" xml:space="preserve">
    <value>Edit Topic Name</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Message error</value>
  </data>
  <data name="ErrorTopic" xml:space="preserve">
    <value>Topic error</value>
  </data>
  <data name="ErrorTopicName" xml:space="preserve">
    <value>Topic with such name already exists.</value>
  </data>
  <data name="Forum" xml:space="preserve">
    <value>Forum</value>
  </data>
  <data name="GoodBye" xml:space="preserve">
    <value>Good bye, </value>
  </data>
  <data name="IncorrectData" xml:space="preserve">
    <value>Incorrect data input</value>
  </data>
  <data name="IncorrectPass" xml:space="preserve">
    <value>Incorrect password!</value>
  </data>
  <data name="InputMessage" xml:space="preserve">
    <value>Input your message</value>
  </data>
  <data name="LastMessage" xml:space="preserve">
    <value>Last message</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageDate" xml:space="preserve">
    <value>Message Date</value>
  </data>
  <data name="MessageForBanned" xml:space="preserve">
    <value>You have been banned! The entrance isn't executed.</value>
  </data>
  <data name="NewTypeUser" xml:space="preserve">
    <value>New Type User</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PassConfirmed" xml:space="preserve">
    <value>Passwords don't coincide!</value>
  </data>
  <data name="PassValid" xml:space="preserve">
    <value>&lt;p&gt;Password has to be in the range 8-20.&lt;/p&gt;</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="RegistrationComplete" xml:space="preserve">
    <value>Registration is successfully complete!</value>
  </data>
  <data name="RegistrationDate" xml:space="preserve">
    <value>Registration Date</value>
  </data>
  <data name="RegistrationError" xml:space="preserve">
    <value>Registration error</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat Password</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="ShowUserMessagesBtn" xml:space="preserve">
    <value>Show User Messages</value>
  </data>
  <data name="ShowUsers" xml:space="preserve">
    <value>Show Users</value>
  </data>
  <data name="TextMessageValid" xml:space="preserve">
    <value>&lt;p&gt;Text message has to be in the range 1-4000.&lt;/p&gt;</value>
  </data>
  <data name="Topic" xml:space="preserve">
    <value>Topic</value>
  </data>
  <data name="TopicName" xml:space="preserve">
    <value>Topic Name</value>
  </data>
  <data name="TopicNameValid" xml:space="preserve">
    <value>&lt;p&gt;The topic name has to be in the range 4-20.&lt;/p&gt;</value>
  </data>
  <data name="TypeUser" xml:space="preserve">
    <value>Type User</value>
  </data>
  <data name="UserEx" xml:space="preserve">
    <value>The user exists!</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserNameValid" xml:space="preserve">
    <value>&lt;p&gt;User Name has to be in the range 4-20.&lt;/p&gt;</value>
  </data>
  <data name="UserNotEx" xml:space="preserve">
    <value>The user doesn't exist</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome, </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>